/*
 * Copyright (c) 2023, Patrick Bene
 * This file is distributed under the Boost Software License, Version 1.0.
 * See LICENSE_1_0.txt or https://www.boost.org/LICENSE_1_0.txt 
 */

// This example displays an animated metasprite.

data /sprites
    // Here's where we define our metasprite, comprised of four 8x8 tiles:
    [] frame_0
        (make_metasprite(0, Ms{}(
            Ms(-8, -8, $00, $00),
            Ms( 0, -8, $01, $00),
            Ms(-8,  0, $02, $00),
            Ms( 0,  0, $03, $00))))

    [] frame_1
        (make_metasprite(ATTR_H_FLIP, Ms{}(
            Ms(-8, -8, $00, $00),
            Ms( 0, -8, $01, $00),
            Ms(-8,  0, $02, $00),
            Ms( 0,  0, $03, $00))))

    [] frame_2
        (make_metasprite(ATTR_V_FLIP, Ms{}(
            Ms(-8, -8, $00, $00),
            Ms( 0, -8, $01, $00),
            Ms(-8,  0, $02, $00),
            Ms( 0,  0, $03, $00))))

    [] my_animation
        (make_anim(Fs{}(
            // First parameter of Fs is the duration. Second is the metasprite.
            Fs(60,   @frame_0),
            Fs(120,  @frame_1),
            Fs(30,   @frame_2))))

vars
    // Player variables:
    SS px = 128
    SS py = 120
    AnimState anim_state = AnimState()

nmi game_nmi()
    // Update OAM and poll the pads:
    ppu_upload_oam_poll_pads(0)

    // Turn on rendering:
    {PPUMASK}(PPUMASK_SPR_ON | PPUMASK_NO_CLIP)

    // Reset the scroll
    ppu_reset_scroll(0, 0)

mode main()
: nmi game_nmi
    palette = example_palette
    ppu_upload_palette()
    anim_state = make_anim_state(@my_animation)
    {PPUCTRL}(PPUCTRL_NMI_ON)

    while true
        nmi
        update_pads()
        move_player()
        update_sprites()

fn move_player()
    ct Int SPEED = 2

    if pads[0].held & BUTTON_LEFT
        px -= SPEED
    else if pads[0].held & BUTTON_RIGHT
        px += SPEED

    if pads[0].held & BUTTON_UP
        py -= SPEED
    else if pads[0].held & BUTTON_DOWN
        py += SPEED

    anim_state = tick_anim(anim_state, true)

fn update_sprites()
    // Our stack index into OAM:
    U o = 0

    o = push_oam_anim(o, px, py, anim_state)

    // Clear the remainder of OAM
    hide_oam(o)

chrrom
    file(fmt, "sprite.png")
